/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dis_sem3;

import Entities.Bus;
import Graph.Chart;
import Graph.Dataset;
import Graph.Series;
import OSPABA.ISimDelegate;
import OSPABA.SimState;
import OSPABA.Simulation;
import java.awt.FlowLayout;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import simulation.MySimulation;

/**
 *
 * @author Dzi≈ào
 */
public class Main extends javax.swing.JFrame implements ISimDelegate{

    /**
     * Creates new form Main
     */
    public Main() throws FileNotFoundException, UnsupportedEncodingException {
        
        initComponents();
        mySimulation = new MySimulation();
        
        jPanelConfig3DoorsBuses.setVisible(false);
        jPanelConfig4DoorsBuses.setVisible(false);
        jPanelBusStopesInfo.setVisible(false);
       
        jTabbedPaneSimulation.setEnabledAt(3, false);
        jPanelMicrobusesConfig.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneSimulation = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabelAveragewaitingtimeRepl = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabelPeopleLostStartMatchRepl = new javax.swing.JLabel();
        jProgressBar = new javax.swing.JProgressBar();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabelFansCustomerTimeInSystemRepl = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabelBusesLinkAUseRepl = new javax.swing.JLabel();
        jLabelBusesLinkCUseRepl = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabelBusesLinkBUseRepl = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabelFansComeLateToMatchLinkA = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabelFansComeLateToMatchLinkB = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabelFansComeLateToMatchLinkC = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabelAveragewaitingtimeLinkARepl = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabelAveragewaitingtimeLinkBRepl = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabelAveragewaitingtimeLinkCRepl = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabelAverageProfitMicrobusesRepl = new javax.swing.JLabel();
        jLabelISAverageWaitingTimeRepl = new javax.swing.JLabel();
        jLabelISFansLostMatchRepl = new javax.swing.JLabel();
        jLabelISFullTimeInsSystemRepl = new javax.swing.JLabel();
        jLabelISEmptyBusTimeLinkARepl = new javax.swing.JLabel();
        jLabelISEmptyBusTimeLinkBRepl = new javax.swing.JLabel();
        jLabelISEmptyBusTimeLinkCRepl = new javax.swing.JLabel();
        jLabelISFansLostMatchLinkARepl = new javax.swing.JLabel();
        jLabelISFansLostMatchLinkBRepl = new javax.swing.JLabel();
        jLabelISFansLostMatchLinkCRepl = new javax.swing.JLabel();
        jLabelISWaitingTimeLinkARepl = new javax.swing.JLabel();
        jLabelISWaitingTimeLinkBRepl = new javax.swing.JLabel();
        jLabelISWaitingTimeLinkCRepl = new javax.swing.JLabel();
        jLabelISMicrobusesProfitRepl = new javax.swing.JLabel();
        jPanelGraphWaitingTime = new javax.swing.JPanel();
        jTextFieldSkipedReplications = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jTabbedPaneMicroBusConfig = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaLinkABusStopes = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextAreaLinkBBusStopes = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaLinkCBusStopes = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextAreaCommonBusStopes = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabelAveragewaitingtime = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabelPeopleLostStartMatch = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabelFansCustomerTimeInSystem = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabelAveragewaitingtimeLinkA = new javax.swing.JLabel();
        jLabelAveragewaitingtimeLinkB = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabelAveragewaitingtimeLinkC = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabelAverageProfitMicrobuses = new javax.swing.JLabel();
        jLabelISAverageWaitingTime = new javax.swing.JLabel();
        jLabelISFullTimeInsSystem = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaLinkA = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaLinkB = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaLinkC = new javax.swing.JTextArea();
        jLabel42 = new javax.swing.JLabel();
        jLabelBusesLinkAUse = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabelBusesLinkCUse = new javax.swing.JLabel();
        jLabelBusesLinkBUse = new javax.swing.JLabel();
        jLabelISNotUseBusesLinkA = new javax.swing.JLabel();
        jLabelISNotUseBusesLinkB = new javax.swing.JLabel();
        jLabelISNotUseBusesLinkC = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldNumberOfBusLinkA3Doors = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldNumberOfBusLinkB3Doors = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldNumberOfBusLinkC3Doors = new javax.swing.JTextField();
        jButtonBusNumbersConfirm = new javax.swing.JButton();
        jPanelConfig3DoorsBuses = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableBus3NumberLinkA = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTableBus3NumberLinkB = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTableBus3NumberLinkC = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldNumberOfBusLinkA4Doors = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldNumberOfBusLinkB4Doors = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldNumberOfBusLinkC4Doors = new javax.swing.JTextField();
        jPanelConfig4DoorsBuses = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTableBus4NumberLinkA = new javax.swing.JTable();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTableBus4NumberLinkB = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTableBus4NumberLinkC = new javax.swing.JTable();
        jPanelBusStopesInfo = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTableInfoLinkA2 = new javax.swing.JTable();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTableInfoLinkA1 = new javax.swing.JTable();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTableInfoLinkA = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabelImagemap = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanelBusStopesInfo1 = new javax.swing.JPanel();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTableInfoLinkA3 = new javax.swing.JTable();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTableInfoLinkA4 = new javax.swing.JTable();
        jScrollPane19 = new javax.swing.JScrollPane();
        jTableInfoLinkA5 = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabelImagemap1 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jTextFieldNumberOfMicrobusLinkA = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextFieldNumberOfMicrobusLinkB = new javax.swing.JTextField();
        jTextFieldNumberOfMicrobusLinkC = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jButtonMicrobusNumberConfirm = new javax.swing.JButton();
        jPanelMicrobusesConfig = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTableMicroBusLinkB = new javax.swing.JTable();
        jScrollPane20 = new javax.swing.JScrollPane();
        jTableMicroBusLinkA = new javax.swing.JTable();
        jScrollPane22 = new javax.swing.JScrollPane();
        jTableMicroBusLinkC = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldMatchStart = new javax.swing.JTextField();
        jCheckBoxUseMicrobuses = new javax.swing.JCheckBox();
        jCheckBoxWaitMode = new javax.swing.JCheckBox();
        jPanelSimulationConfig = new javax.swing.JPanel();
        jSliderDuration = new javax.swing.JSlider();
        jSliderInterval = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonStop = new javax.swing.JButton();
        jLabelRealTime = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jButtonPause = new javax.swing.JButton();
        jButtonStart = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jTextFieldNumberOfReplication = new javax.swing.JTextField();
        jButtonGenerateData = new javax.swing.JButton();
        jButtonGenerateMicrobuses = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelAveragewaitingtimeRepl.setText("0");

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setText("Priemern√Ω ƒças ƒçakania:");

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel35.setText("Nestihlo z√°pas:");

        jLabelPeopleLostStartMatchRepl.setText("0");

        jLabel36.setText("0%");

        jLabel37.setText("100%");

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel38.setText("Priemern√Ω ƒças str√°ven√Ω v syst√©me:");

        jLabelFansCustomerTimeInSystemRepl.setText("0");

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel39.setText("Percentu√°lne nevyu≈æitie autobusov Linka A:");

        jLabelBusesLinkAUseRepl.setText("0");

        jLabelBusesLinkCUseRepl.setText("0");

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel40.setText("Percentu√°lne nevyu≈æitie autobusov Linka C:");

        jLabelBusesLinkBUseRepl.setText("0");

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel41.setText("Percentu√°lne nevyu≈æitie autobusov Linka B:");

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel46.setText("Nestihlo z√°pas Linka A(zo v≈°etk√Ωch):");

        jLabelFansComeLateToMatchLinkA.setText("0");

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel47.setText("Nestihlo z√°pas Linka B(zo v≈°etk√Ωch):");

        jLabelFansComeLateToMatchLinkB.setText("0");

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel48.setText("Nestihlo z√°pas Linka C(zo v≈°etk√Ωch):");

        jLabelFansComeLateToMatchLinkC.setText("0");

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel49.setText("Priemern√Ω ƒças ƒçakania Linka A:");

        jLabelAveragewaitingtimeLinkARepl.setText("0");

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel50.setText("Priemern√Ω ƒças ƒçakania Linka B:");

        jLabelAveragewaitingtimeLinkBRepl.setText("0");

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel51.setText("Priemern√Ω ƒças ƒçakania Linka C:");

        jLabelAveragewaitingtimeLinkCRepl.setText("0");

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel55.setText("Z√°robok mikrobusy:");

        jLabelAverageProfitMicrobusesRepl.setText("0");

        jLabelISAverageWaitingTimeRepl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISAverageWaitingTimeRepl.setText("Interval spolahlivosti <>");

        jLabelISFansLostMatchRepl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISFansLostMatchRepl.setText("Interval spolahlivosti <>");

        jLabelISFullTimeInsSystemRepl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISFullTimeInsSystemRepl.setText("Interval spolahlivosti <>");

        jLabelISEmptyBusTimeLinkARepl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISEmptyBusTimeLinkARepl.setText("Interval spolahlivosti <>");

        jLabelISEmptyBusTimeLinkBRepl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISEmptyBusTimeLinkBRepl.setText("Interval spolahlivosti <>");

        jLabelISEmptyBusTimeLinkCRepl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISEmptyBusTimeLinkCRepl.setText("Interval spolahlivosti <>");

        jLabelISFansLostMatchLinkARepl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISFansLostMatchLinkARepl.setText("Interval spolahlivosti <>");

        jLabelISFansLostMatchLinkBRepl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISFansLostMatchLinkBRepl.setText("Interval spolahlivosti <>");

        jLabelISFansLostMatchLinkCRepl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISFansLostMatchLinkCRepl.setText("Interval spolahlivosti <>");

        jLabelISWaitingTimeLinkARepl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISWaitingTimeLinkARepl.setText("Interval spolahlivosti <>");

        jLabelISWaitingTimeLinkBRepl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISWaitingTimeLinkBRepl.setText("Interval spolahlivosti <>");

        jLabelISWaitingTimeLinkCRepl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISWaitingTimeLinkCRepl.setText("Interval spolahlivosti <>");

        jLabelISMicrobusesProfitRepl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISMicrobusesProfitRepl.setText("Interval spolahlivosti <>");

        jPanelGraphWaitingTime.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanelGraphWaitingTimeLayout = new javax.swing.GroupLayout(jPanelGraphWaitingTime);
        jPanelGraphWaitingTime.setLayout(jPanelGraphWaitingTimeLayout);
        jPanelGraphWaitingTimeLayout.setHorizontalGroup(
            jPanelGraphWaitingTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );
        jPanelGraphWaitingTimeLayout.setVerticalGroup(
            jPanelGraphWaitingTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
        );

        jTextFieldSkipedReplications.setText("100");

        jLabel57.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel57.setText("Preskoƒçi≈• replik√°cii:");

        jLabel58.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel58.setText("Graf priemern√©ho ƒçakania");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel55)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelAverageProfitMicrobusesRepl)
                        .addGap(47, 47, 47)
                        .addComponent(jLabelISMicrobusesProfitRepl))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelFansCustomerTimeInSystemRepl)
                        .addGap(56, 56, 56)
                        .addComponent(jLabelISFullTimeInsSystemRepl))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel46)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelFansComeLateToMatchLinkA))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel47)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelFansComeLateToMatchLinkB))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel48)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelFansComeLateToMatchLinkC)))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelISFansLostMatchLinkCRepl)
                            .addComponent(jLabelISFansLostMatchLinkBRepl)
                            .addComponent(jLabelISFansLostMatchLinkARepl)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel49)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelAveragewaitingtimeLinkARepl))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel50)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelAveragewaitingtimeLinkBRepl))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel51)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelAveragewaitingtimeLinkCRepl)))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelISWaitingTimeLinkCRepl)
                            .addComponent(jLabelISWaitingTimeLinkBRepl)
                            .addComponent(jLabelISWaitingTimeLinkARepl)))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel39)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelBusesLinkAUseRepl))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel41)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelBusesLinkBUseRepl))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel40)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelBusesLinkCUseRepl)))
                            .addGap(45, 45, 45)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelISEmptyBusTimeLinkARepl)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabelISEmptyBusTimeLinkBRepl)
                                    .addGap(242, 242, 242)
                                    .addComponent(jLabel58))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabelISEmptyBusTimeLinkCRepl)
                                    .addGap(82, 82, 82)
                                    .addComponent(jPanelGraphWaitingTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel33)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel35)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelPeopleLostStartMatchRepl)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabelAveragewaitingtimeRepl)
                                    .addGap(62, 62, 62)
                                    .addComponent(jLabelISAverageWaitingTimeRepl))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabelISFansLostMatchRepl)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel36)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel37))))
                .addContainerGap(194, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel57)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSkipedReplications, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(381, 381, 381))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel36)
                        .addComponent(jLabel37)
                        .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(jLabelAveragewaitingtimeRepl)
                            .addComponent(jLabelISAverageWaitingTimeRepl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35)
                            .addComponent(jLabelPeopleLostStartMatchRepl)
                            .addComponent(jLabelISFansLostMatchRepl))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabelFansCustomerTimeInSystemRepl)
                    .addComponent(jLabelISFullTimeInsSystemRepl))
                .addGap(42, 42, 42)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jLabelBusesLinkAUseRepl)
                    .addComponent(jLabelISEmptyBusTimeLinkARepl))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(jLabelBusesLinkBUseRepl)
                    .addComponent(jLabelISEmptyBusTimeLinkBRepl)
                    .addComponent(jLabel58))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelBusesLinkCUseRepl)
                                .addComponent(jLabelISEmptyBusTimeLinkCRepl))
                            .addComponent(jLabel40))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46)
                            .addComponent(jLabelFansComeLateToMatchLinkA)
                            .addComponent(jLabelISFansLostMatchLinkARepl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel47)
                            .addComponent(jLabelFansComeLateToMatchLinkB)
                            .addComponent(jLabelISFansLostMatchLinkBRepl))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel48)
                            .addComponent(jLabelFansComeLateToMatchLinkC)
                            .addComponent(jLabelISFansLostMatchLinkCRepl))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel49)
                            .addComponent(jLabelAveragewaitingtimeLinkARepl)
                            .addComponent(jLabelISWaitingTimeLinkARepl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50)
                            .addComponent(jLabelAveragewaitingtimeLinkBRepl)
                            .addComponent(jLabelISWaitingTimeLinkBRepl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel51)
                            .addComponent(jLabelAveragewaitingtimeLinkCRepl)
                            .addComponent(jLabelISWaitingTimeLinkCRepl))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel55)
                            .addComponent(jLabelAverageProfitMicrobusesRepl)
                            .addComponent(jLabelISMicrobusesProfitRepl)))
                    .addComponent(jPanelGraphWaitingTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSkipedReplications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel57))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jTabbedPaneSimulation.addTab("Replik√°cie", jPanel4);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Linka A");

        jTextAreaLinkABusStopes.setColumns(20);
        jTextAreaLinkABusStopes.setRows(5);
        jScrollPane4.setViewportView(jTextAreaLinkABusStopes);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Linka B");

        jTextAreaLinkBBusStopes.setColumns(20);
        jTextAreaLinkBBusStopes.setRows(5);
        jScrollPane5.setViewportView(jTextAreaLinkBBusStopes);

        jTextAreaLinkCBusStopes.setColumns(20);
        jTextAreaLinkCBusStopes.setRows(5);
        jScrollPane6.setViewportView(jTextAreaLinkCBusStopes);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Linka C");

        jTextAreaCommonBusStopes.setColumns(20);
        jTextAreaCommonBusStopes.setRows(5);
        jScrollPane7.setViewportView(jTextAreaCommonBusStopes);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Spoloƒçn√© zast√°vky");

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel32.setText("Priemern√Ω ƒças ƒçakania:");

        jLabelAveragewaitingtime.setText("0");

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel34.setText("Nestihlo z√°pas:");

        jLabelPeopleLostStartMatch.setText("0");

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel45.setText("Priemern√Ω ƒças str√°ven√Ω v syst√©me:");

        jLabelFansCustomerTimeInSystem.setText("0");

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel52.setText("Priemern√Ω ƒças ƒçakania Linka A:");

        jLabelAveragewaitingtimeLinkA.setText("0");

        jLabelAveragewaitingtimeLinkB.setText("0");

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel53.setText("Priemern√Ω ƒças ƒçakania Linka B:");

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel54.setText("Priemern√Ω ƒças ƒçakania Linka C:");

        jLabelAveragewaitingtimeLinkC.setText("0");

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel56.setText("Z√°robok mikrobusy:");

        jLabelAverageProfitMicrobuses.setText("0");

        jLabelISAverageWaitingTime.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISAverageWaitingTime.setText("Interval spolahlivosti <>");

        jLabelISFullTimeInsSystem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISFullTimeInsSystem.setText("Interval spolahlivosti <>");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(jLabel14))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(jLabel15))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(jLabel16))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(jLabel18))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelAveragewaitingtime)
                                .addGap(31, 31, 31)
                                .addComponent(jLabelISAverageWaitingTime))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel45)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelFansCustomerTimeInSystem))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel34)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelPeopleLostStartMatch)))
                                .addGap(50, 50, 50)
                                .addComponent(jLabelISFullTimeInsSystem))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel56)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelAverageProfitMicrobuses)))
                        .addGap(244, 244, 244)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel52)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelAveragewaitingtimeLinkA))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel53)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelAveragewaitingtimeLinkB))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel54)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelAveragewaitingtimeLinkC)))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(jLabelAveragewaitingtime)
                            .addComponent(jLabelISAverageWaitingTime))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(jLabelPeopleLostStartMatch))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel45)
                            .addComponent(jLabelFansCustomerTimeInSystem)
                            .addComponent(jLabelISFullTimeInsSystem)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel52)
                            .addComponent(jLabelAveragewaitingtimeLinkA))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel53)
                            .addComponent(jLabelAveragewaitingtimeLinkB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel54)
                            .addComponent(jLabelAveragewaitingtimeLinkC))))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(jLabelAverageProfitMicrobuses))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        jTabbedPaneMicroBusConfig.addTab("Z√°stavky", jPanel2);

        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 553));

        jTextAreaLinkA.setColumns(20);
        jTextAreaLinkA.setRows(5);
        jScrollPane1.setViewportView(jTextAreaLinkA);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Linka A");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Linka B");

        jTextAreaLinkB.setColumns(20);
        jTextAreaLinkB.setRows(5);
        jScrollPane2.setViewportView(jTextAreaLinkB);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Linka C");

        jTextAreaLinkC.setColumns(20);
        jTextAreaLinkC.setRows(5);
        jScrollPane3.setViewportView(jTextAreaLinkC);

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel42.setText("Percentu√°lne nevyu≈æitie autobusov Linka A:");

        jLabelBusesLinkAUse.setText("0");

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel43.setText("Percentu√°lne nevyu≈æitie autobusov Linka B:");

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel44.setText("Percentu√°lne nevyu≈æitie autobusov Linka C:");

        jLabelBusesLinkCUse.setText("0");

        jLabelBusesLinkBUse.setText("0");

        jLabelISNotUseBusesLinkA.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISNotUseBusesLinkA.setText("Interval spolahlivosti <>");

        jLabelISNotUseBusesLinkB.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISNotUseBusesLinkB.setText("Interval spolahlivosti <>");

        jLabelISNotUseBusesLinkC.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelISNotUseBusesLinkC.setText("Interval spolahlivosti <>");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addComponent(jLabel7))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(jLabel8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(jLabel9))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel42)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelBusesLinkAUse))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel43)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelBusesLinkBUse))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel44)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelBusesLinkCUse)))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelISNotUseBusesLinkC)
                            .addComponent(jLabelISNotUseBusesLinkB)
                            .addComponent(jLabelISNotUseBusesLinkA))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(jLabelBusesLinkAUse)
                    .addComponent(jLabelISNotUseBusesLinkA))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(jLabelBusesLinkBUse)
                    .addComponent(jLabelISNotUseBusesLinkB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelBusesLinkCUse)
                        .addComponent(jLabelISNotUseBusesLinkC))
                    .addComponent(jLabel44))
                .addContainerGap(155, Short.MAX_VALUE))
        );

        jTabbedPaneMicroBusConfig.addTab("Autobusy", jPanel1);

        jTabbedPaneSimulation.addTab("Simul√°cia", jTabbedPaneMicroBusConfig);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Poƒçet autobusov A (3 dvere):");

        jTextFieldNumberOfBusLinkA3Doors.setText("3");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Poƒçet autobusov B (3 dvere):");

        jTextFieldNumberOfBusLinkB3Doors.setText("3");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Poƒçet autobusov C (3 dvere):");

        jTextFieldNumberOfBusLinkC3Doors.setText("3");

        jButtonBusNumbersConfirm.setText("OK");
        jButtonBusNumbersConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBusNumbersConfirmActionPerformed(evt);
            }
        });

        jPanelConfig3DoorsBuses.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTableBus3NumberLinkA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "≈†tart. z√°stavka", "ƒåas od zaƒçiatku"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(jTableBus3NumberLinkA);
        if (jTableBus3NumberLinkA.getColumnModel().getColumnCount() > 0) {
            jTableBus3NumberLinkA.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        jTableBus3NumberLinkB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "≈†tart. z√°stavka", "ƒåas od zaƒçiatku"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(jTableBus3NumberLinkB);
        if (jTableBus3NumberLinkB.getColumnModel().getColumnCount() > 0) {
            jTableBus3NumberLinkB.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        jTableBus3NumberLinkC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "≈†tart. z√°stavka", "ƒåas od zaƒçiatku"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(jTableBus3NumberLinkC);
        if (jTableBus3NumberLinkC.getColumnModel().getColumnCount() > 0) {
            jTableBus3NumberLinkC.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        javax.swing.GroupLayout jPanelConfig3DoorsBusesLayout = new javax.swing.GroupLayout(jPanelConfig3DoorsBuses);
        jPanelConfig3DoorsBuses.setLayout(jPanelConfig3DoorsBusesLayout);
        jPanelConfig3DoorsBusesLayout.setHorizontalGroup(
            jPanelConfig3DoorsBusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfig3DoorsBusesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelConfig3DoorsBusesLayout.setVerticalGroup(
            jPanelConfig3DoorsBusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfig3DoorsBusesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConfig3DoorsBusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Poƒçet autobusov A (4 dvere):");

        jTextFieldNumberOfBusLinkA4Doors.setText("3");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Poƒçet autobusov B (4 dvere):");

        jTextFieldNumberOfBusLinkB4Doors.setText("3");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Poƒçet autobusov C (4 dvere):");

        jTextFieldNumberOfBusLinkC4Doors.setText("3");

        jPanelConfig4DoorsBuses.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTableBus4NumberLinkA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "≈†tart. z√°stavka", "ƒåas od zaƒçiatku"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(jTableBus4NumberLinkA);
        if (jTableBus4NumberLinkA.getColumnModel().getColumnCount() > 0) {
            jTableBus4NumberLinkA.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        jTableBus4NumberLinkB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "≈†tart. z√°stavka", "ƒåas od zaƒçiatku"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(jTableBus4NumberLinkB);
        if (jTableBus4NumberLinkB.getColumnModel().getColumnCount() > 0) {
            jTableBus4NumberLinkB.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        jTableBus4NumberLinkC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "≈†tart. z√°stavka", "ƒåas od zaƒçiatku"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane13.setViewportView(jTableBus4NumberLinkC);
        if (jTableBus4NumberLinkC.getColumnModel().getColumnCount() > 0) {
            jTableBus4NumberLinkC.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        javax.swing.GroupLayout jPanelConfig4DoorsBusesLayout = new javax.swing.GroupLayout(jPanelConfig4DoorsBuses);
        jPanelConfig4DoorsBuses.setLayout(jPanelConfig4DoorsBusesLayout);
        jPanelConfig4DoorsBusesLayout.setHorizontalGroup(
            jPanelConfig4DoorsBusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfig4DoorsBusesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelConfig4DoorsBusesLayout.setVerticalGroup(
            jPanelConfig4DoorsBusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfig4DoorsBusesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConfig4DoorsBusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanelBusStopesInfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTableInfoLinkA2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(0), "CA"},
                { new Integer(1), "CB"},
                { new Integer(2), "K1"},
                { new Integer(3), "K2"},
                { new Integer(4), "CC"},
                { new Integer(5), "CD"},
                { new Integer(6), "CE"},
                { new Integer(7), "CF"},
                { new Integer(8), "CG"}
            },
            new String [] {
                "Id zas.", "N√°zov"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableInfoLinkA2.getTableHeader().setReorderingAllowed(false);
        jScrollPane16.setViewportView(jTableInfoLinkA2);

        jTableInfoLinkA1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(0), "BA"},
                { new Integer(1), "BB"},
                { new Integer(2), "BC"},
                { new Integer(3), "BD"},
                { new Integer(4), "K2"},
                { new Integer(5), "BE"},
                { new Integer(6), "BF"},
                { new Integer(7), "K3"},
                { new Integer(8), "BG"},
                { new Integer(9), "BH"},
                { new Integer(10), "BI"},
                { new Integer(11), "BJ"}
            },
            new String [] {
                "Id zas.", "N√°zov"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableInfoLinkA1.getTableHeader().setReorderingAllowed(false);
        jScrollPane15.setViewportView(jTableInfoLinkA1);

        jTableInfoLinkA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(0), "AA"},
                { new Integer(1), "AB"},
                { new Integer(2), "AC"},
                { new Integer(3), "AD"},
                { new Integer(4), "K1"},
                { new Integer(5), "AE"},
                { new Integer(6), "AF"},
                { new Integer(7), "AG"},
                { new Integer(8), "K3"},
                { new Integer(9), "AH"},
                { new Integer(10), "AI"},
                { new Integer(11), "AJ"},
                { new Integer(12), "AK"},
                { new Integer(13), "AL"}
            },
            new String [] {
                "Id zas.", "N√°zov"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableInfoLinkA.getTableHeader().setReorderingAllowed(false);
        jScrollPane14.setViewportView(jTableInfoLinkA);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("Linka A");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("Linka B");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("Linka C");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel22.setText("ID zast√°vok");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dis_sem3/map.png"))); // NOI18N

        javax.swing.GroupLayout jPanelBusStopesInfoLayout = new javax.swing.GroupLayout(jPanelBusStopesInfo);
        jPanelBusStopesInfo.setLayout(jPanelBusStopesInfoLayout);
        jPanelBusStopesInfoLayout.setHorizontalGroup(
            jPanelBusStopesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBusStopesInfoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addGap(142, 142, 142))
            .addGroup(jPanelBusStopesInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelImagemap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanelBusStopesInfoLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanelBusStopesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelBusStopesInfoLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel19)))
                .addGap(26, 26, 26)
                .addGroup(jPanelBusStopesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBusStopesInfoLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel20)
                        .addGap(31, 31, 31))
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelBusStopesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBusStopesInfoLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(40, 40, 40))
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
        jPanelBusStopesInfoLayout.setVerticalGroup(
            jPanelBusStopesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBusStopesInfoLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelBusStopesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBusStopesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelImagemap)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(423, 423, 423)
                        .addComponent(jButtonBusNumbersConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanelConfig3DoorsBuses, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jTextFieldNumberOfBusLinkA3Doors, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(59, 59, 59)
                            .addComponent(jLabel5)
                            .addGap(18, 18, 18)
                            .addComponent(jTextFieldNumberOfBusLinkB3Doors, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(63, 63, 63)
                            .addComponent(jLabel6)
                            .addGap(18, 18, 18)
                            .addComponent(jTextFieldNumberOfBusLinkC3Doors, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanelConfig4DoorsBuses, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jTextFieldNumberOfBusLinkA4Doors, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(59, 59, 59)
                            .addComponent(jLabel11)
                            .addGap(18, 18, 18)
                            .addComponent(jTextFieldNumberOfBusLinkB4Doors, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(63, 63, 63)
                            .addComponent(jLabel12)
                            .addGap(18, 18, 18)
                            .addComponent(jTextFieldNumberOfBusLinkC4Doors, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelBusStopesInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNumberOfBusLinkA3Doors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNumberOfBusLinkB3Doors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldNumberOfBusLinkC3Doors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelConfig3DoorsBuses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNumberOfBusLinkA4Doors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNumberOfBusLinkB4Doors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jTextFieldNumberOfBusLinkC4Doors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelConfig4DoorsBuses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonBusNumbersConfirm))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanelBusStopesInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jTabbedPaneSimulation.addTab("Konfigur√°cia autobusy", jPanel3);

        jPanelBusStopesInfo1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTableInfoLinkA3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(0), "CA"},
                { new Integer(1), "CB"},
                { new Integer(2), "K1"},
                { new Integer(3), "K2"},
                { new Integer(4), "CC"},
                { new Integer(5), "CD"},
                { new Integer(6), "CE"},
                { new Integer(7), "CF"},
                { new Integer(8), "CG"}
            },
            new String [] {
                "Id zas.", "N√°zov"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableInfoLinkA3.getTableHeader().setReorderingAllowed(false);
        jScrollPane17.setViewportView(jTableInfoLinkA3);

        jTableInfoLinkA4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(0), "BA"},
                { new Integer(1), "BB"},
                { new Integer(2), "BC"},
                { new Integer(3), "BD"},
                { new Integer(4), "K2"},
                { new Integer(5), "BE"},
                { new Integer(6), "BF"},
                { new Integer(7), "K3"},
                { new Integer(8), "BG"},
                { new Integer(9), "BH"},
                { new Integer(10), "BI"},
                { new Integer(11), "BJ"}
            },
            new String [] {
                "Id zas.", "N√°zov"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableInfoLinkA4.getTableHeader().setReorderingAllowed(false);
        jScrollPane18.setViewportView(jTableInfoLinkA4);

        jTableInfoLinkA5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(0), "AA"},
                { new Integer(1), "AB"},
                { new Integer(2), "AC"},
                { new Integer(3), "AD"},
                { new Integer(4), "K1"},
                { new Integer(5), "AE"},
                { new Integer(6), "AF"},
                { new Integer(7), "AG"},
                { new Integer(8), "K3"},
                { new Integer(9), "AH"},
                { new Integer(10), "AI"},
                { new Integer(11), "AJ"},
                { new Integer(12), "AK"},
                { new Integer(13), "AL"}
            },
            new String [] {
                "Id zas.", "N√°zov"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableInfoLinkA5.getTableHeader().setReorderingAllowed(false);
        jScrollPane19.setViewportView(jTableInfoLinkA5);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setText("Linka A");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setText("Linka B");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setText("Linka C");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel26.setText("ID zast√°vok");

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dis_sem3/map.png"))); // NOI18N

        javax.swing.GroupLayout jPanelBusStopesInfo1Layout = new javax.swing.GroupLayout(jPanelBusStopesInfo1);
        jPanelBusStopesInfo1.setLayout(jPanelBusStopesInfo1Layout);
        jPanelBusStopesInfo1Layout.setHorizontalGroup(
            jPanelBusStopesInfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBusStopesInfo1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel26)
                .addGap(142, 142, 142))
            .addGroup(jPanelBusStopesInfo1Layout.createSequentialGroup()
                .addGroup(jPanelBusStopesInfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelBusStopesInfo1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanelBusStopesInfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelBusStopesInfo1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel23)))
                        .addGap(26, 26, 26)
                        .addGroup(jPanelBusStopesInfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelBusStopesInfo1Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel24)
                                .addGap(31, 31, 31))
                            .addComponent(jScrollPane18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelBusStopesInfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBusStopesInfo1Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(30, 30, 30))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelBusStopesInfo1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel27)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelImagemap1, javax.swing.GroupLayout.DEFAULT_SIZE, 2, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelBusStopesInfo1Layout.setVerticalGroup(
            jPanelBusStopesInfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBusStopesInfo1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelBusStopesInfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBusStopesInfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelImagemap1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel28.setText("Poƒçet mikrobusov linka A:");

        jTextFieldNumberOfMicrobusLinkA.setText("6");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel29.setText("Poƒçet mikrobusov linka B:");

        jTextFieldNumberOfMicrobusLinkB.setText("4");

        jTextFieldNumberOfMicrobusLinkC.setText("3");

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel30.setText("Poƒçet mikrobusov linka C:");

        jButtonMicrobusNumberConfirm.setText("OK");
        jButtonMicrobusNumberConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMicrobusNumberConfirmActionPerformed(evt);
            }
        });

        jPanelMicrobusesConfig.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTableMicroBusLinkB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "≈†tart. z√°stavka", "ƒåas od zaƒçiatku"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane21.setViewportView(jTableMicroBusLinkB);
        if (jTableMicroBusLinkB.getColumnModel().getColumnCount() > 0) {
            jTableMicroBusLinkB.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        jTableMicroBusLinkA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "≈†tart. z√°stavka", "ƒåas od zaƒçiatku"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane20.setViewportView(jTableMicroBusLinkA);
        if (jTableMicroBusLinkA.getColumnModel().getColumnCount() > 0) {
            jTableMicroBusLinkA.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        jTableMicroBusLinkC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "≈†tart. z√°stavka", "ƒåas od zaƒçiatku"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane22.setViewportView(jTableMicroBusLinkC);
        if (jTableMicroBusLinkC.getColumnModel().getColumnCount() > 0) {
            jTableMicroBusLinkC.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        javax.swing.GroupLayout jPanelMicrobusesConfigLayout = new javax.swing.GroupLayout(jPanelMicrobusesConfig);
        jPanelMicrobusesConfig.setLayout(jPanelMicrobusesConfigLayout);
        jPanelMicrobusesConfigLayout.setHorizontalGroup(
            jPanelMicrobusesConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMicrobusesConfigLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanelMicrobusesConfigLayout.setVerticalGroup(
            jPanelMicrobusesConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMicrobusesConfigLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanelMicrobusesConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelBusStopesInfo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(73, 73, 73)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNumberOfMicrobusLinkA, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNumberOfMicrobusLinkB, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNumberOfMicrobusLinkC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanelMicrobusesConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(jButtonMicrobusNumberConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(133, 133, 133))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelBusStopesInfo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldNumberOfMicrobusLinkC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldNumberOfMicrobusLinkB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldNumberOfMicrobusLinkA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonMicrobusNumberConfirm)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelMicrobusesConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPaneSimulation.addTab("Konfigur√°cia mikrobusy", jPanel5);

        getContentPane().add(jTabbedPaneSimulation, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1340, 610));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Zaƒçiatok z√°pasu:");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jTextFieldMatchStart.setText("20:00:00");
        getContentPane().add(jTextFieldMatchStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 60, -1));

        jCheckBoxUseMicrobuses.setText("Mikrobusy");
        jCheckBoxUseMicrobuses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxUseMicrobusesActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxUseMicrobuses, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 10, -1, -1));

        jCheckBoxWaitMode.setText("Re≈æim ƒçakania");
        getContentPane().add(jCheckBoxWaitMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 30, -1, -1));

        jPanelSimulationConfig.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jSliderDuration.setMaximum(120);
        jSliderDuration.setMinimum(20);
        jSliderDuration.setValue(60);

        jSliderInterval.setMaximum(150);
        jSliderInterval.setMinimum(20);
        jSliderInterval.setValue(90);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Speed");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Interval");

        jButtonStop.setText("Stop");
        jButtonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopActionPerformed(evt);
            }
        });

        jLabelRealTime.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabelRealTime.setText("00:00:00");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Re√°lny ƒças:");

        jButtonPause.setText("Pauza");
        jButtonPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPauseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSimulationConfigLayout = new javax.swing.GroupLayout(jPanelSimulationConfig);
        jPanelSimulationConfig.setLayout(jPanelSimulationConfigLayout);
        jPanelSimulationConfigLayout.setHorizontalGroup(
            jPanelSimulationConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSimulationConfigLayout.createSequentialGroup()
                .addGroup(jPanelSimulationConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSimulationConfigLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSliderInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelSimulationConfigLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanelSimulationConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSliderDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelSimulationConfigLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(jPanelSimulationConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSimulationConfigLayout.createSequentialGroup()
                        .addComponent(jButtonStop, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPause, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSimulationConfigLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(6, 6, 6)
                        .addComponent(jLabelRealTime)
                        .addGap(102, 102, 102))))
        );
        jPanelSimulationConfigLayout.setVerticalGroup(
            jPanelSimulationConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSimulationConfigLayout.createSequentialGroup()
                .addGroup(jPanelSimulationConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSimulationConfigLayout.createSequentialGroup()
                        .addComponent(jSliderInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(jPanelSimulationConfigLayout.createSequentialGroup()
                        .addGroup(jPanelSimulationConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelSimulationConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonStop)
                                .addComponent(jButtonPause))
                            .addComponent(jSliderDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelSimulationConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(jPanelSimulationConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel17)
                                .addGroup(jPanelSimulationConfigLayout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addComponent(jLabelRealTime))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelSimulationConfig, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 760, 70));

        jButtonStart.setText("≈†tart");
        jButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 50, 200, -1));

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel31.setText("Poƒçet replik√°cii:");
        getContentPane().add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 20, -1, -1));

        jTextFieldNumberOfReplication.setText("1");
        getContentPane().add(jTextFieldNumberOfReplication, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 20, 60, -1));

        jButtonGenerateData.setText("Generuj");
        jButtonGenerateData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerateDataActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonGenerateData, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 20));

        jButtonGenerateMicrobuses.setText("Generuj Mic");
        jButtonGenerateMicrobuses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerateMicrobusesActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonGenerateMicrobuses, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, -1, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPauseActionPerformed

        if(pause == true) {
            jButtonPause.setText("Pokraƒçova≈•");
            mySimulation.resumeSimulation();
            pause = false;
        } else {
            jButtonPause.setText("Pauza");
            mySimulation.pauseSimulation();
            pause = true;
        }

    }//GEN-LAST:event_jButtonPauseActionPerformed

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartActionPerformed
        // TODO add your handling code here:
        
        datasetchart = new Dataset();
        sersieChart = new Series("Priemern√Ω ƒças ƒçakania");
        datasetchart.addSeries(sersieChart.getSeries());
        chart = new Chart("Priemern√Ω ƒças ƒçakania","Replik√°cia", "ƒças", datasetchart.getDataset());
        
        this.jPanelGraphWaitingTime.removeAll();
        this.jPanelGraphWaitingTime.setLayout(new FlowLayout());
        this.jPanelGraphWaitingTime.add(chart.getChartPanel());
        this.jPanelGraphWaitingTime.validate();
        this.jPanelGraphWaitingTime.setVisible(true);
        
        skipedReplications = Integer.parseInt(jTextFieldSkipedReplications.getText());
        
        int replicationsNumber = Integer.parseInt(jTextFieldNumberOfReplication.getText());
        this.jProgressBar.setMaximum(replicationsNumber);
        
        if(replicationsNumber == 1){
            mySimulation.setSimulationMode(true);
            jTabbedPaneSimulation.setEnabledAt(1, true);
            jPanelSimulationConfig.setVisible(true);
            
            double speedValue = jSliderDuration.getValue() * 0.1;
            double intervalValue = jSliderInterval.getValue();

            mySimulation.setSimSpeed(intervalValue * .01, (10 - speedValue + .001) * .05);
        } else {
            jTabbedPaneSimulation.setEnabledAt(1, false);
            jPanelSimulationConfig.setVisible(false);
            mySimulation.setSimulationMode(false);
            mySimulation.setMaxSimSpeed();
        }

        int hourFrom = Integer.parseInt(jTextFieldMatchStart.getText().substring(0, 2));
        int minutesFrom = Integer.parseInt(jTextFieldMatchStart.getText().substring(3, 5));
        int secundesFrom = Integer.parseInt(jTextFieldMatchStart.getText().substring(6, 8));
        double startMatch = (hourFrom * 60 * 60) + (minutesFrom * 60) + secundesFrom;

        mySimulation.setStartMatch(startMatch);
        mySimulation.registerDelegate(this);
        
        mySimulation.busAgent().setDataForBusesLinkaA3(getDataFromTable(jTableBus3NumberLinkA));
        mySimulation.busAgent().setDataForBusesLinkaA4(getDataFromTable(jTableBus4NumberLinkA));
        mySimulation.busAgent().setDataForBusesLinkaA1(getDataFromTable(jTableMicroBusLinkA));
        
        mySimulation.busAgent().setDataForBusesLinkaB3(getDataFromTable(jTableBus3NumberLinkB));
        mySimulation.busAgent().setDataForBusesLinkaB4(getDataFromTable(jTableBus4NumberLinkB));
        
        
        mySimulation.busAgent().setDataForBusesLinkaC3(getDataFromTable(jTableBus3NumberLinkC));
        mySimulation.busAgent().setDataForBusesLinkaC4(getDataFromTable(jTableBus4NumberLinkC));
        
        if(jCheckBoxUseMicrobuses.isSelected() != false) {
            mySimulation.busAgent().setDataForBusesLinkaA1(getDataFromTable(jTableMicroBusLinkA));
            mySimulation.busAgent().setDataForBusesLinkaB1(getDataFromTable(jTableMicroBusLinkB));
            mySimulation.busAgent().setDataForBusesLinkaC1(getDataFromTable(jTableMicroBusLinkC));
        } else {
            ArrayList<String> array = new ArrayList<String>();
            mySimulation.busAgent().setDataForBusesLinkaA1(array);
            mySimulation.busAgent().setDataForBusesLinkaB1(array);
            mySimulation.busAgent().setDataForBusesLinkaC1(array);
        }
        mySimulation.setWaitingMode(jCheckBoxWaitMode.isSelected());
        
        Thread mainThread = new Thread(new Runnable() {
            @Override
            public void run() {
                mySimulation.simulate(replicationsNumber, 9000000d);
            }
        });
        mainThread.start();

    }//GEN-LAST:event_jButtonStartActionPerformed

    private void jButtonBusNumbersConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBusNumbersConfirmActionPerformed
        jPanelConfig3DoorsBuses.setVisible(true);
        jPanelConfig4DoorsBuses.setVisible(true);
        jPanelBusStopesInfo.setVisible(true);
        
        int numberOfBusLinkA3 = Integer.parseInt(jTextFieldNumberOfBusLinkA3Doors.getText());
        int numberOfBusLinkB3 = Integer.parseInt(jTextFieldNumberOfBusLinkB3Doors.getText());
        int numberOfBusLinkC3 = Integer.parseInt(jTextFieldNumberOfBusLinkC3Doors.getText());
        
        DefaultTableModel model1 = (DefaultTableModel) jTableBus3NumberLinkA.getModel();
        model1.setRowCount(0);
        for(int i = 0; i < numberOfBusLinkA3; i ++)
        {
            String index = Integer.toString(i); 
            
            Object[] row = {index,"00","0"};

            model1.addRow(row);
        }
        
        DefaultTableModel model2 = (DefaultTableModel) jTableBus3NumberLinkB.getModel();
        model2.setRowCount(0);
        for(int i = 0; i < numberOfBusLinkB3; i ++)
        {
            String index = Integer.toString(i); 
            
            Object[] row = {index,"00","0"};
            model2.addRow(row);
        }
        
        DefaultTableModel model3 = (DefaultTableModel) jTableBus3NumberLinkC.getModel();
        model3.setRowCount(0);
        for(int i = 0; i < numberOfBusLinkC3; i ++)
        {
            String index = Integer.toString(i); 
            
            Object[] row = {index,"00","0"};
            model3.addRow(row);
        }
        
        int numberOfBusLinkA4 = Integer.parseInt(jTextFieldNumberOfBusLinkA4Doors.getText());
        int numberOfBusLinkB4 = Integer.parseInt(jTextFieldNumberOfBusLinkB4Doors.getText());
        int numberOfBusLinkC4 = Integer.parseInt(jTextFieldNumberOfBusLinkC4Doors.getText());
        
        DefaultTableModel model4 = (DefaultTableModel) jTableBus4NumberLinkA.getModel();
        model4.setRowCount(0);
        for(int i = 0; i < numberOfBusLinkA4; i ++)
        {
            String index = Integer.toString(i); 
            
            Object[] row = {index,"00","0"};
            model4.addRow(row);
        }
        
        DefaultTableModel model5 = (DefaultTableModel) jTableBus4NumberLinkB.getModel();
        model5.setRowCount(0);
        for(int i = 0; i < numberOfBusLinkB4; i ++)
        {
            String index = Integer.toString(i); 
            
            Object[] row = {index,"00","0"};
            model5.addRow(row);
        }
        
        DefaultTableModel model6 = (DefaultTableModel) jTableBus4NumberLinkC.getModel();
        model6.setRowCount(0);
        for(int i = 0; i < numberOfBusLinkC4; i ++)
        {
            String index = Integer.toString(i); 
            
            Object[] row = {index,"00","0"};
            model6.addRow(row);
        }
    }//GEN-LAST:event_jButtonBusNumbersConfirmActionPerformed

    private void jCheckBoxUseMicrobusesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxUseMicrobusesActionPerformed
        if(jCheckBoxUseMicrobuses.isSelected() == true) {
            jTabbedPaneSimulation.setEnabledAt(3, true);
        } else {
            jTabbedPaneSimulation.setEnabledAt(3, false);
        }
    }//GEN-LAST:event_jCheckBoxUseMicrobusesActionPerformed

    private void jButtonMicrobusNumberConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMicrobusNumberConfirmActionPerformed
        jPanelMicrobusesConfig.setVisible(true);
        
        int numberOfMicroBusLinkA = Integer.parseInt(jTextFieldNumberOfMicrobusLinkA.getText());
        int numberOfMicroBusLinkB = Integer.parseInt(jTextFieldNumberOfMicrobusLinkB.getText());
        int numberOfMicroBusLinkC = Integer.parseInt(jTextFieldNumberOfMicrobusLinkC.getText());
        
        DefaultTableModel model4 = (DefaultTableModel) jTableMicroBusLinkA.getModel();
        model4.setRowCount(0);
        for(int i = 0; i < numberOfMicroBusLinkA; i ++)
        {
            String index = Integer.toString(i); 
            
            Object[] row = {index,"00","0"};
            model4.addRow(row);
        }
        
        DefaultTableModel model5 = (DefaultTableModel) jTableMicroBusLinkB.getModel();
        model5.setRowCount(0);
        for(int i = 0; i < numberOfMicroBusLinkB; i ++)
        {
            String index = Integer.toString(i); 
            
            Object[] row = {index,"00","0"};
            model5.addRow(row);
        }
        
        DefaultTableModel model6 = (DefaultTableModel) jTableMicroBusLinkC.getModel();
        model6.setRowCount(0);
        for(int i = 0; i < numberOfMicroBusLinkC; i ++)
        {
            String index = Integer.toString(i); 
            
            Object[] row = {index,"00","0"};
            model6.addRow(row);
        }
    }//GEN-LAST:event_jButtonMicrobusNumberConfirmActionPerformed

    private void jButtonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStopActionPerformed
        mySimulation.stopReplication();
    }//GEN-LAST:event_jButtonStopActionPerformed

    private void jButtonGenerateDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerateDataActionPerformed
        this.analyzeTool2();
    }//GEN-LAST:event_jButtonGenerateDataActionPerformed

    private void jButtonGenerateMicrobusesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerateMicrobusesActionPerformed
        this.analyzerToolMicrobuses();
    }//GEN-LAST:event_jButtonGenerateMicrobusesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Main().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBusNumbersConfirm;
    private javax.swing.JButton jButtonGenerateData;
    private javax.swing.JButton jButtonGenerateMicrobuses;
    private javax.swing.JButton jButtonMicrobusNumberConfirm;
    private javax.swing.JButton jButtonPause;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JButton jButtonStop;
    private javax.swing.JCheckBox jCheckBoxUseMicrobuses;
    private javax.swing.JCheckBox jCheckBoxWaitMode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAverageProfitMicrobuses;
    private javax.swing.JLabel jLabelAverageProfitMicrobusesRepl;
    private javax.swing.JLabel jLabelAveragewaitingtime;
    private javax.swing.JLabel jLabelAveragewaitingtimeLinkA;
    private javax.swing.JLabel jLabelAveragewaitingtimeLinkARepl;
    private javax.swing.JLabel jLabelAveragewaitingtimeLinkB;
    private javax.swing.JLabel jLabelAveragewaitingtimeLinkBRepl;
    private javax.swing.JLabel jLabelAveragewaitingtimeLinkC;
    private javax.swing.JLabel jLabelAveragewaitingtimeLinkCRepl;
    private javax.swing.JLabel jLabelAveragewaitingtimeRepl;
    private javax.swing.JLabel jLabelBusesLinkAUse;
    private javax.swing.JLabel jLabelBusesLinkAUseRepl;
    private javax.swing.JLabel jLabelBusesLinkBUse;
    private javax.swing.JLabel jLabelBusesLinkBUseRepl;
    private javax.swing.JLabel jLabelBusesLinkCUse;
    private javax.swing.JLabel jLabelBusesLinkCUseRepl;
    private javax.swing.JLabel jLabelFansComeLateToMatchLinkA;
    private javax.swing.JLabel jLabelFansComeLateToMatchLinkB;
    private javax.swing.JLabel jLabelFansComeLateToMatchLinkC;
    private javax.swing.JLabel jLabelFansCustomerTimeInSystem;
    private javax.swing.JLabel jLabelFansCustomerTimeInSystemRepl;
    private javax.swing.JLabel jLabelISAverageWaitingTime;
    private javax.swing.JLabel jLabelISAverageWaitingTimeRepl;
    private javax.swing.JLabel jLabelISEmptyBusTimeLinkARepl;
    private javax.swing.JLabel jLabelISEmptyBusTimeLinkBRepl;
    private javax.swing.JLabel jLabelISEmptyBusTimeLinkCRepl;
    private javax.swing.JLabel jLabelISFansLostMatchLinkARepl;
    private javax.swing.JLabel jLabelISFansLostMatchLinkBRepl;
    private javax.swing.JLabel jLabelISFansLostMatchLinkCRepl;
    private javax.swing.JLabel jLabelISFansLostMatchRepl;
    private javax.swing.JLabel jLabelISFullTimeInsSystem;
    private javax.swing.JLabel jLabelISFullTimeInsSystemRepl;
    private javax.swing.JLabel jLabelISMicrobusesProfitRepl;
    private javax.swing.JLabel jLabelISNotUseBusesLinkA;
    private javax.swing.JLabel jLabelISNotUseBusesLinkB;
    private javax.swing.JLabel jLabelISNotUseBusesLinkC;
    private javax.swing.JLabel jLabelISWaitingTimeLinkARepl;
    private javax.swing.JLabel jLabelISWaitingTimeLinkBRepl;
    private javax.swing.JLabel jLabelISWaitingTimeLinkCRepl;
    private javax.swing.JLabel jLabelImagemap;
    private javax.swing.JLabel jLabelImagemap1;
    private javax.swing.JLabel jLabelPeopleLostStartMatch;
    private javax.swing.JLabel jLabelPeopleLostStartMatchRepl;
    private javax.swing.JLabel jLabelRealTime;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelBusStopesInfo;
    private javax.swing.JPanel jPanelBusStopesInfo1;
    private javax.swing.JPanel jPanelConfig3DoorsBuses;
    private javax.swing.JPanel jPanelConfig4DoorsBuses;
    private javax.swing.JPanel jPanelGraphWaitingTime;
    private javax.swing.JPanel jPanelMicrobusesConfig;
    private javax.swing.JPanel jPanelSimulationConfig;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSlider jSliderDuration;
    private javax.swing.JSlider jSliderInterval;
    private javax.swing.JTabbedPane jTabbedPaneMicroBusConfig;
    private javax.swing.JTabbedPane jTabbedPaneSimulation;
    private javax.swing.JTable jTableBus3NumberLinkA;
    private javax.swing.JTable jTableBus3NumberLinkB;
    private javax.swing.JTable jTableBus3NumberLinkC;
    private javax.swing.JTable jTableBus4NumberLinkA;
    private javax.swing.JTable jTableBus4NumberLinkB;
    private javax.swing.JTable jTableBus4NumberLinkC;
    private javax.swing.JTable jTableInfoLinkA;
    private javax.swing.JTable jTableInfoLinkA1;
    private javax.swing.JTable jTableInfoLinkA2;
    private javax.swing.JTable jTableInfoLinkA3;
    private javax.swing.JTable jTableInfoLinkA4;
    private javax.swing.JTable jTableInfoLinkA5;
    private javax.swing.JTable jTableMicroBusLinkA;
    private javax.swing.JTable jTableMicroBusLinkB;
    private javax.swing.JTable jTableMicroBusLinkC;
    private javax.swing.JTextArea jTextAreaCommonBusStopes;
    private javax.swing.JTextArea jTextAreaLinkA;
    private javax.swing.JTextArea jTextAreaLinkABusStopes;
    private javax.swing.JTextArea jTextAreaLinkB;
    private javax.swing.JTextArea jTextAreaLinkBBusStopes;
    private javax.swing.JTextArea jTextAreaLinkC;
    private javax.swing.JTextArea jTextAreaLinkCBusStopes;
    private javax.swing.JTextField jTextFieldMatchStart;
    private javax.swing.JTextField jTextFieldNumberOfBusLinkA3Doors;
    private javax.swing.JTextField jTextFieldNumberOfBusLinkA4Doors;
    private javax.swing.JTextField jTextFieldNumberOfBusLinkB3Doors;
    private javax.swing.JTextField jTextFieldNumberOfBusLinkB4Doors;
    private javax.swing.JTextField jTextFieldNumberOfBusLinkC3Doors;
    private javax.swing.JTextField jTextFieldNumberOfBusLinkC4Doors;
    private javax.swing.JTextField jTextFieldNumberOfMicrobusLinkA;
    private javax.swing.JTextField jTextFieldNumberOfMicrobusLinkB;
    private javax.swing.JTextField jTextFieldNumberOfMicrobusLinkC;
    private javax.swing.JTextField jTextFieldNumberOfReplication;
    private javax.swing.JTextField jTextFieldSkipedReplications;
    // End of variables declaration//GEN-END:variables

    MySimulation mySimulation;
    private boolean pause = false;
    private Chart chart;
    private Dataset datasetchart;  
    private Series sersieChart;  
    private int skipedReplications;

    @Override
    public void refresh(Simulation smltn) {
    if(mySimulation.isSimulationMode() == true) {    
      if(mySimulation.currentTime() > 0) {
//----------------------------Cas----------------------------------------------------------------------------//           
        String hour = Integer.toString((int)(mySimulation.currentTime() / 3600));
        String minutes;
        if((int)((mySimulation.currentTime() % 3600) / 60) < 10) {
        minutes = "0" + Integer.toString((int)((mySimulation.currentTime() % 3600) / 60));
        } else {
        minutes = Integer.toString((int)((mySimulation.currentTime() % 3600) / 60));
        }
        String seconds;
        if((int)(mySimulation.currentTime() % 60) < 10){
        seconds = "0" + Integer.toString((int)(mySimulation.currentTime() % 60));
        } else {
        seconds = Integer.toString((int)(mySimulation.currentTime() % 60));
        }
        this.jLabelRealTime.setText(hour + " : " + minutes + " : " + seconds);  
        } 
//---------------------------------------------------------------------------------------------------------------//           
          
        double speedMax = jSliderDuration.getMaximum() * .1;
        double speedValue = jSliderDuration.getValue() * 0.1;
	double intervalValue = jSliderInterval.getValue();

        mySimulation.setSimSpeed(intervalValue * .01, (speedMax - speedValue + .001) * .05);

//----------------------------Autobusy----------------------------------------------------------------------------//        
        jTextAreaLinkA.setText("Autobus       Typ       Akt. z√°stavka       Pre≈°iel       Pasa≈æierov         Stav\n"
                             + "------------------------------------------------------------------------------------------------\n");
        for(int i = 0; i < mySimulation.busAgent().getBuses_A().size(); i++){
            Bus myBus =  mySimulation.busAgent().getBuses_A().get(i);
            String id;
               if(myBus.getId() < 10) {
                id = "0" + Integer.toString(myBus.getId());
               } else {
                id = Integer.toString(myBus.getId());
               }
            String lastBusStop = myBus.getLastStop().getType();
            
            int currIdStop = myBus.getLastStop().getId();
            int allStops = mySimulation.busStopAgent().getBusStops_A().size();
            int numberOfPassagers = mySimulation.busAgent().getFansInBusAllBuses().get(myBus.getGlobalId()).size();
            //int numberOfPassagers = mySimulation.busAgent().getBuses_A().get(i).getSeatsFull();
            int busType = myBus.getBusType();
            String status = myBus.getStatus();
            String passed = Double.toString(Math.round(((((double)currIdStop + 1) / (double)allStops) * 100) * 100.0) / 100.0);
            jTextAreaLinkA.append("   " + id + "                 " + busType + "                   " + lastBusStop + "              " + passed + "                 " + numberOfPassagers + "                 " + status + "\n");
        }
        
        jTextAreaLinkB.setText("Autobus       Typ       Akt. z√°stavka       Pre≈°iel       Pasa≈æierov         Stav\n"
                             + "------------------------------------------------------------------------------------------------\n");
        for(int i = 0; i < mySimulation.busAgent().getBuses_B().size(); i++){
            Bus myBus =  mySimulation.busAgent().getBuses_B().get(i);
            String id;
               if(myBus.getId() < 10) {
                id = "0" + Integer.toString(myBus.getId());
               } else {
                id = Integer.toString(myBus.getId());
               }
            String lastBusStop = myBus.getLastStop().getType();
            
            int currIdStop = myBus.getLastStop().getId();
            int allStops = mySimulation.busStopAgent().getBusStops_B().size();
            String passed = Double.toString(Math.round(((((double)currIdStop + 1) / (double)allStops) * 100) * 100.0) / 100.0);
            int numberOfPassagers = mySimulation.busAgent().getFansInBusAllBuses().get(myBus.getGlobalId()).size();
            //int numberOfPassagers = myBus.getSeatsFull();
            int busType = myBus.getBusType();
            String status = myBus.getStatus();
            
            jTextAreaLinkB.append("   " + id + "                 " + busType + "                   " + lastBusStop + "              " + passed + "                 " + numberOfPassagers + "                 " + status + "\n");
        }
        
        jTextAreaLinkC.setText("Autobus       Typ       Akt. z√°stavka       Pre≈°iel       Pasa≈æierov         Stav\n"
                             + "------------------------------------------------------------------------------------------------\n");
        for(int i = 0; i < mySimulation.busAgent().getBuses_C().size(); i++){
            Bus myBus =  mySimulation.busAgent().getBuses_C().get(i);
            String id;
               if(myBus.getId() < 10) {
                id = "0" + Integer.toString(myBus.getId());
               } else {
                id = Integer.toString(myBus.getId());
               }
            String lastBusStop = myBus.getLastStop().getType();
            
            int currIdStop = myBus.getLastStop().getId();
            int allStops = mySimulation.busStopAgent().getBusStops_C().size();
            String passed = Double.toString(Math.round(((((double)currIdStop + 1) / (double)allStops) * 100) * 100.0) / 100.0);
            int numberOfPassagers = mySimulation.busAgent().getFansInBusAllBuses().get(myBus.getGlobalId()).size();
            //int numberOfPassagers = myBus.getSeatsFull();
            int busType = myBus.getBusType();
            String status = myBus.getStatus();

            jTextAreaLinkC.append("   " + id + "                 " + busType + "                   " + lastBusStop + "              " + passed + "                 " + numberOfPassagers + "                 " + status + "\n");
        }
//----------------------------------------------------------------------------------------------------------------//

//----------------------------Z√°stavky----------------------------------------------------------------------------// 

        jTextAreaLinkABusStopes.setText("Z√°stavka       Poƒçet cestuj√∫cich\n"
                             + "-------------------------------------------------\n");
        jTextAreaLinkBBusStopes.setText("Z√°stavka       Poƒçet cestuj√∫cich\n"
                             + "-------------------------------------------------\n");
        jTextAreaLinkCBusStopes.setText("Z√°stavka       Poƒçet cestuj√∫cich\n"
                             + "-------------------------------------------------\n");
        jTextAreaCommonBusStopes.setText("Z√°stavka       Poƒçet cestuj√∫cich\n"
                             + "-------------------------------------------------\n");
        for(int i = 0; i < mySimulation.busStopAgent().getAllBusStops().size() - 1; i++){
            String nameBusStop = mySimulation.busStopAgent().getAllBusStops().get(i).getType();   
            int fanWaiting = mySimulation.busStopAgent().getFansAllLinks().get(i).size();
            
            if(nameBusStop.substring(0, 1).compareTo("A") == 0)
            {
            jTextAreaLinkABusStopes.append("   " + nameBusStop + "                                " + fanWaiting + "\n");
            } 
            else if(nameBusStop.substring(0, 1).compareTo("B") == 0)
            {
            jTextAreaLinkBBusStopes.append("   " + nameBusStop + "                                " + fanWaiting + "\n");
            } 
            else if(nameBusStop.substring(0, 1).compareTo("C") == 0)
            {
            jTextAreaLinkCBusStopes.append("   " + nameBusStop + "                                " + fanWaiting + "\n");
            }
            else if(nameBusStop.substring(0, 1).compareTo("K") == 0)
            {
            jTextAreaCommonBusStopes.append("   " + nameBusStop + "                                " + fanWaiting + "\n");
            }
        }

//----------------------------------------------------------------------------------------------------------------//

//----------------------------≈†tatistiky----------------------------------------------------------------------------// 
    Double averageWaitTime = mySimulation.busStopAgent().getWaitingTimeStat().mean();   
    jLabelAveragewaitingtime.setText(Double.toString(Math.round((averageWaitTime / 60) * 100.0)/ 100.0));   
    double a = mySimulation.busStopAgent().getWaitingTimeStatLinkA().mean()/60; 
    
    jLabelBusesLinkAUse.setText(Double.toString(Math.round((mySimulation.busAgent().getEmptyBusesLinkATime().mean() * 100) * 100.0) / 100.0));
    jLabelBusesLinkBUse.setText(Double.toString(Math.round((mySimulation.busAgent().getEmptyBusesLinkBTime().mean() * 100) * 100.0) / 100.0));
    jLabelBusesLinkCUse.setText(Double.toString(Math.round((mySimulation.busAgent().getEmptyBusesLinkCTime().mean() * 100) * 100.0) / 100.0));
    
    jLabelFansCustomerTimeInSystem.setText(Double.toString(Math.round((mySimulation.environsAgent().getFansTimeInSystem().mean() / 60) * 100.0)/ 100.0));   
//----------------------------------------------------------------------------------------------------------------//
        } else {
            
        }
    
        if(mySimulation.getStartMatch() <= mySimulation.currentTime()){
            //mySimulation.stopReplication();
        }
    }
    public ArrayList<String> getDataFromTable(JTable table) {
        ArrayList<String> array = new ArrayList<String>(); 
            for(int i = 0; i < table.getRowCount(); i++){
                String row = table.getValueAt(i, 1) + "," + table.getValueAt(i, 2);
                array.add(row);
            }
        return array;
    }    

    @Override
    public void simStateChanged(Simulation smltn, SimState ss) {
        switch (ss)
	{
            case stopped:
               onSimulationDidFinish(smltn);
            break;
            
            case replicationStopped:
		onReplicationDidFinish(smltn);
	    break;
        }
    }

    private void onSimulationDidFinish(Simulation smltn) {
        if(mySimulation.isSimulationMode() == true) {
            Double averageWaitTime = mySimulation.busStopAgent().getWaitingTimeStat().mean();   
            jLabelAveragewaitingtime.setText(Double.toString(Math.round((averageWaitTime / 60) * 100.0)/ 100.0)); 
            String ISlow = Double.toString(Math.round((mySimulation.busStopAgent().getWaitingTimeStat().confidenceInterval_90()[0] / 60) * 100.0 ) / 100.0);
            String IShigh = Double.toString(Math.round((mySimulation.busStopAgent().getWaitingTimeStat().confidenceInterval_90()[1] / 60) * 100.0 ) / 100.0);
            jLabelISAverageWaitingTime.setText("Interval spolahlivosti < " + ISlow + " , " + IShigh + " >");
            
            jLabelPeopleLostStartMatch.setText(Double.toString(((mySimulation.environsAgent().getPeopleLostStartMatch().mean() * 100) * 100.0) / 100.0));
            
            jLabelFansCustomerTimeInSystem.setText(Double.toString(Math.round((mySimulation.environsAgent().getFansTimeInSystem().mean() / 60) * 100.0)/ 100.0));  
            String ISlow2 = Double.toString(Math.round((mySimulation.environsAgent().getFansTimeInSystem().confidenceInterval_90()[0] / 60) * 100.0 ) / 100.0);
            String IShigh2 = Double.toString(Math.round((mySimulation.environsAgent().getFansTimeInSystem().confidenceInterval_90()[1] / 60) * 100.0 ) / 100.0);
            jLabelISFullTimeInsSystem.setText("Interval spolahlivosti < " + ISlow2 + " , " + IShigh2 + " >");
            
            jLabelBusesLinkAUse.setText(Double.toString(Math.round((mySimulation.busAgent().getEmptyBusesLinkATime().mean() * 100) * 100.0) / 100.0));  
            String ISlow3 = Double.toString(Math.round((mySimulation.busAgent().getEmptyBusesLinkATime().confidenceInterval_90()[0] * 100.0) * 100.0 ) / 100.0);
            String IShigh3 = Double.toString(Math.round((mySimulation.busAgent().getEmptyBusesLinkATime().confidenceInterval_90()[1] * 100.0) * 100.0 ) / 100.0);
            jLabelISNotUseBusesLinkA.setText("Interval spolahlivosti < " + ISlow3 + " , " + IShigh3 + " >");
            
            jLabelBusesLinkBUse.setText(Double.toString(Math.round((mySimulation.busAgent().getEmptyBusesLinkBTime().mean() * 100) * 100.0) / 100.0));    
            String ISlow4 = Double.toString(Math.round((mySimulation.busAgent().getEmptyBusesLinkBTime().confidenceInterval_90()[0] * 100.0) * 100.0 ) / 100.0);
            String IShigh4 = Double.toString(Math.round((mySimulation.busAgent().getEmptyBusesLinkBTime().confidenceInterval_90()[1] * 100.0) * 100.0 ) / 100.0);
            jLabelISNotUseBusesLinkB.setText("Interval spolahlivosti < " + ISlow4 + " , " + IShigh4 + " >");
            
            jLabelBusesLinkCUse.setText(Double.toString(Math.round((mySimulation.busAgent().getEmptyBusesLinkCTime().mean() * 100) * 100.0) / 100.0));
            String ISlow5 = Double.toString(Math.round((mySimulation.busAgent().getEmptyBusesLinkCTime().confidenceInterval_90()[0] * 100.0) * 100.0 ) / 100.0);
            String IShigh5 = Double.toString(Math.round((mySimulation.busAgent().getEmptyBusesLinkCTime().confidenceInterval_90()[1] * 100.0) * 100.0 ) / 100.0);
            jLabelISNotUseBusesLinkC.setText("Interval spolahlivosti < " + ISlow5 + " , " + IShigh5 + " >");
            
            jLabelAveragewaitingtimeLinkA.setText(Double.toString(Math.round((mySimulation.busStopAgent().getWaitingTimeStatLinkA().mean() / 60) * 100.0)/ 100.0));   
            jLabelAveragewaitingtimeLinkB.setText(Double.toString(Math.round((mySimulation.busStopAgent().getWaitingTimeStatLinkB().mean() / 60) * 100.0)/ 100.0)); 
            jLabelAveragewaitingtimeLinkC.setText(Double.toString(Math.round((mySimulation.busStopAgent().getWaitingTimeStatLinkC().mean() / 60) * 100.0)/ 100.0)); 

          
            mySimulation.busAgent().calculateProfitMicrobuses();
            jLabelAverageProfitMicrobuses.setText(Double.toString(Math.round(mySimulation.busAgent().getProfitForMicrobuses() * 100.0) / 100.0)); 
        } else {
            Double averageWaitTime = mySimulation.getAverageWaitingTimeRepl().mean();   
            jLabelAveragewaitingtimeRepl.setText(Double.toString(Math.round((averageWaitTime / 60) * 100.0 )/ 100.0));
            String ISlow = Double.toString(Math.round((mySimulation.getAverageWaitingTimeRepl().confidenceInterval_90()[0] / 60) * 100.0 ) / 100.0);
            String IShigh = Double.toString(Math.round((mySimulation.getAverageWaitingTimeRepl().confidenceInterval_90()[1] / 60) * 100.0 ) / 100.0);
            jLabelISAverageWaitingTimeRepl.setText("Interval spolahlivosti < " + ISlow + " , " + IShigh + " >");
            
            jLabelAveragewaitingtimeLinkARepl.setText(Double.toString(Math.round((mySimulation.getAverageWaitingTimeLinkARepl().mean() / 60) * 100.0 )/ 100.0));
            String ISlow9 = Double.toString(Math.round((mySimulation.getAverageWaitingTimeLinkARepl().confidenceInterval_90()[0] / 60) * 100.0 ) / 100.0);
            String IShigh9 = Double.toString(Math.round((mySimulation.getAverageWaitingTimeLinkARepl().confidenceInterval_90()[1] / 60) * 100.0 ) / 100.0);
            jLabelISWaitingTimeLinkARepl.setText("Interval spolahlivosti < " + ISlow9 + " , " + IShigh9 + " >");
            
            jLabelAveragewaitingtimeLinkBRepl.setText(Double.toString(Math.round((mySimulation.getAverageWaitingTimeLinkBRepl().mean() / 60) * 100.0 )/ 100.0));
            String ISlow10 = Double.toString(Math.round((mySimulation.getAverageWaitingTimeLinkBRepl().confidenceInterval_90()[0] / 60) * 100.0 ) / 100.0);
            String IShigh10 = Double.toString(Math.round((mySimulation.getAverageWaitingTimeLinkBRepl().confidenceInterval_90()[1] / 60) * 100.0 ) / 100.0);
            jLabelISWaitingTimeLinkBRepl.setText("Interval spolahlivosti < " + ISlow10 + " , " + IShigh10 + " >");
            
            jLabelAveragewaitingtimeLinkCRepl.setText(Double.toString(Math.round((mySimulation.getAverageWaitingTimeLinkCRepl().mean() / 60) * 100.0 )/ 100.0));
            String ISlow11 = Double.toString(Math.round((mySimulation.getAverageWaitingTimeLinkCRepl().confidenceInterval_90()[0] / 60) * 100.0 ) / 100.0);
            String IShigh11 = Double.toString(Math.round((mySimulation.getAverageWaitingTimeLinkCRepl().confidenceInterval_90()[1] / 60) * 100.0 ) / 100.0);
            jLabelISWaitingTimeLinkCRepl.setText("Interval spolahlivosti < " + ISlow11 + " , " + IShigh11 + " >");
            
            jLabelPeopleLostStartMatchRepl.setText(Double.toString(Math.round((mySimulation.getPeopleLostStartMatchRepl().mean() * 100) * 100.0) / 100.0));
            String ISlow1 = Double.toString(Math.round((mySimulation.getPeopleLostStartMatchRepl().confidenceInterval_90()[0] * 100) * 100.0 ) / 100.0);
            String IShigh1 = Double.toString(Math.round((mySimulation.getPeopleLostStartMatchRepl().confidenceInterval_90()[1] * 100) * 100.0 ) / 100.0);
            jLabelISFansLostMatchRepl.setText("Interval spolahlivosti < " + ISlow1 + " , " + IShigh1 + " >");
            
            jLabelFansCustomerTimeInSystemRepl.setText(Double.toString(Math.round((mySimulation.getFansFullTimeInSystem().mean() / 60 ) * 100.0) / 100.0));
            String ISlow2 = Double.toString(Math.round((mySimulation.getFansFullTimeInSystem().confidenceInterval_90()[0] / 60) * 100.0 ) / 100.0);
            String IShigh2 = Double.toString(Math.round((mySimulation.getFansFullTimeInSystem().confidenceInterval_90()[1] / 60) * 100.0 ) / 100.0);
            jLabelISFullTimeInsSystemRepl.setText("Interval spolahlivosti < " + ISlow2 + " , " + IShigh2 + " >");
            
            jLabelBusesLinkAUseRepl.setText(Double.toString(Math.round((mySimulation.getEmptyBusesLinkATimeRepl().mean() * 100) * 100.0) / 100.0));
            String ISlow3 = Double.toString(Math.round((mySimulation.getEmptyBusesLinkATimeRepl().confidenceInterval_90()[0] * 100) * 100.0 ) / 100.0);
            String IShigh3 = Double.toString(Math.round((mySimulation.getEmptyBusesLinkATimeRepl().confidenceInterval_90()[1] * 100) * 100.0 ) / 100.0);
            jLabelISEmptyBusTimeLinkARepl.setText("Interval spolahlivosti < " + ISlow3 + " , " + IShigh3 + " >");
            
            jLabelBusesLinkBUseRepl.setText(Double.toString(Math.round((mySimulation.getEmptyBusesLinkBTimeRepl().mean() * 100) * 100.0) / 100.0));
            String ISlow4 = Double.toString(Math.round((mySimulation.getEmptyBusesLinkBTimeRepl().confidenceInterval_90()[0] * 100) * 100.0 ) / 100.0);
            String IShigh4 = Double.toString(Math.round((mySimulation.getEmptyBusesLinkBTimeRepl().confidenceInterval_90()[1] * 100) * 100.0 ) / 100.0);
            jLabelISEmptyBusTimeLinkBRepl.setText("Interval spolahlivosti < " + ISlow4 + " , " + IShigh4 + " >");
            
            jLabelBusesLinkCUseRepl.setText(Double.toString(Math.round((mySimulation.getEmptyBusesLinkCTimeRepl().mean() * 100) * 100.0) / 100.0));
            String ISlow5 = Double.toString(Math.round((mySimulation.getEmptyBusesLinkCTimeRepl().confidenceInterval_90()[0] * 100) * 100.0 ) / 100.0);
            String IShigh5 = Double.toString(Math.round((mySimulation.getEmptyBusesLinkCTimeRepl().confidenceInterval_90()[1] * 100) * 100.0 ) / 100.0);
            jLabelISEmptyBusTimeLinkCRepl.setText("Interval spolahlivosti < " + ISlow5 + " , " + IShigh5 + " >");
            
            jLabelFansComeLateToMatchLinkA.setText(Double.toString(Math.round((mySimulation.getFansDepartedLateLinkARepl().mean() * 100) * 100.0) / 100.0));  
            String ISlow6 = Double.toString(Math.round((mySimulation.getFansDepartedLateLinkARepl().confidenceInterval_90()[0] * 100) * 100.0 ) / 100.0);
            String IShigh6 = Double.toString(Math.round((mySimulation.getFansDepartedLateLinkARepl().confidenceInterval_90()[1] * 100) * 100.0 ) / 100.0);
            jLabelISFansLostMatchLinkARepl.setText("Interval spolahlivosti < " + ISlow6 + " , " + IShigh6 + " >");
            
            jLabelFansComeLateToMatchLinkB.setText(Double.toString(Math.round((mySimulation.getFansDepartedLateLinkBRepl().mean() * 100) * 100.0) / 100.0)); 
            String ISlow7 = Double.toString(Math.round((mySimulation.getFansDepartedLateLinkBRepl().confidenceInterval_90()[0] * 100) * 100.0 ) / 100.0);
            String IShigh7 = Double.toString(Math.round((mySimulation.getFansDepartedLateLinkBRepl().confidenceInterval_90()[1] * 100) * 100.0 ) / 100.0);
            jLabelISFansLostMatchLinkBRepl.setText("Interval spolahlivosti < " + ISlow7 + " , " + IShigh7 + " >");
            
            jLabelFansComeLateToMatchLinkC.setText(Double.toString(Math.round((mySimulation.getFansDepartedLateLinkCRepl().mean() * 100) * 100.0) / 100.0));
            String ISlow8 = Double.toString(Math.round((mySimulation.getFansDepartedLateLinkCRepl().confidenceInterval_90()[0] * 100) * 100.0 ) / 100.0);
            String IShigh8 = Double.toString(Math.round((mySimulation.getFansDepartedLateLinkCRepl().confidenceInterval_90()[1] * 100) * 100.0 ) / 100.0);
            jLabelISFansLostMatchLinkCRepl.setText("Interval spolahlivosti < " + ISlow8 + " , " + IShigh8 + " >");
            
            jLabelAverageProfitMicrobusesRepl.setText(Double.toString(Math.round(mySimulation.getAverageProfitMicrobuses().mean() * 100.0) / 100.0)); 
            String ISlow12 = Double.toString(Math.round((mySimulation.getAverageProfitMicrobuses().confidenceInterval_90()[0]) * 100.0 ) / 100.0);
            String IShigh12 = Double.toString(Math.round((mySimulation.getAverageProfitMicrobuses().confidenceInterval_90()[1]) * 100.0 ) / 100.0);
            jLabelISMicrobusesProfitRepl.setText("Interval spolahlivosti < " + ISlow12 + " , " + IShigh12 + " >");
                      
        }
    }

    private void onReplicationDidFinish(Simulation smltn) {
        this.jProgressBar.setValue(smltn.currentReplication());
        
        if((mySimulation.currentReplication() % 50  == 0) && (mySimulation.currentReplication() > skipedReplications)) {
                this.sersieChart.addSeries(mySimulation.currentReplication(), mySimulation.getAverageWaitingTimeRepl().mean() / 60);
        }
    }

    private void analyzeTool(){
        
        int bus1StartTime = 220;
        int bus2StartTime = 1800;
        int bus3StartTime = 2400;
        int bus4StartTime = 3000;
        int bus5StartTime = 3600;
        int bus12StartTime = 4980;
        
        String bus1StartBusStop = "00";
        String bus2StartBusStop = "00";
        String bus3StartBusStop = "00";
        String bus4StartBusStop = "00";
        String bus5StartBusStop = "00";
        String bus12StartBusStop = "06";
        
        int bus6StartTime = 1000;
        int bus7StartTime = 1500;
        int bus8StartTime = 2000;
        int bus9StartTime = 3180;
        int bus10StartTime = 3780;
        int bus11StartTime = 5880;
        
        String bus6StartBusStop = "00";
        String bus7StartBusStop = "00";
        String bus8StartBusStop = "00";
        String bus9StartBusStop = "10";
        String bus10StartBusStop = "10";
        String bus11StartBusStop = "10";
        
        ////////////////////////////////////
        
        int bus1StartTimeB = 1200;
        int bus2StartTimeB = 1800;
        int bus3StartTimeB = 2400;
        int bus4StartTimeB = 3000;
        
        String bus1StartBusStopB = "00";
        String bus2StartBusStopB = "00";
        String bus3StartBusStopB = "00";
        String bus4StartBusStopB = "00";
        
        int bus6StartTimeB = 1000;
        int bus7StartTimeB = 1500;
        int bus8StartTimeB = 2000;
        
        String bus6StartBusStopB = "00";
        String bus7StartBusStopB = "00";
        String bus8StartBusStopB = "00";
                
        ////////////////////////////////////
        
        int bus1StartTimeC = 1200;
        int bus2StartTimeC = 1800;
        int bus3StartTimeC = 2400;
        int bus4StartTimeC = 3000;
        
        String bus1StartBusStopC = "00";
        String bus2StartBusStopC = "00";
        String bus3StartBusStopC = "00";
        String bus4StartBusStopC = "00";
        
        int bus6StartTimeC = 1000;
        int bus7StartTimeC = 1500;
        int bus8StartTimeC = 2000;
        int bus9StartTimeC = 2500;
        
        String bus6StartBusStopC = "00";
        String bus7StartBusStopC = "00";
        String bus8StartBusStopC = "00";
        String bus9StartBusStopC = "00";

        
       for(int i = 0; i < 800; i++) {
            
            if(i < 400) {
                bus12StartTime = bus12StartTime - 10;
            } else {
                bus12StartTime = 4980;
                bus12StartTime = bus12StartTime + 10;
            }
            
            mySimulation.setMaxSimSpeed();

            int hourFrom = Integer.parseInt(jTextFieldMatchStart.getText().substring(0, 2));
            int minutesFrom = Integer.parseInt(jTextFieldMatchStart.getText().substring(3, 5));
            int secundesFrom = Integer.parseInt(jTextFieldMatchStart.getText().substring(6, 8));
            double startMatch = (hourFrom * 60 * 60) + (minutesFrom * 60) + secundesFrom;

            mySimulation.setStartMatch(startMatch);
            //mySimulation.registerDelegate(this);

            ArrayList<String> busesLinkA3 = new ArrayList<String>();
            ArrayList<String> busesLinkA4 = new ArrayList<String>();
            
            ArrayList<String> busesLinkB3 = new ArrayList<String>();
            ArrayList<String> busesLinkB4 = new ArrayList<String>();
            
            ArrayList<String> busesLinkC3 = new ArrayList<String>();
            ArrayList<String> busesLinkC4 = new ArrayList<String>();
            
                String bus1 = bus1StartBusStop + "," + bus1StartTime;
                String bus2 = bus2StartBusStop + "," + bus2StartTime;
                String bus3 = bus3StartBusStop + "," + bus3StartTime;
                String bus4 = bus4StartBusStop + "," + bus4StartTime;
                String bus5 = bus5StartBusStop + "," + bus5StartTime;
                String bus12 = bus12StartBusStop + "," + bus12StartTime;
                
                busesLinkA3.add(bus1);
                busesLinkA3.add(bus2);
                busesLinkA3.add(bus3);
                busesLinkA3.add(bus4);
                busesLinkA3.add(bus5);
                busesLinkA3.add(bus12);
                
                String bus6 = bus6StartBusStop + "," + bus6StartTime;
                String bus7 = bus7StartBusStop + "," + bus7StartTime;
                String bus8 = bus8StartBusStop + "," + bus8StartTime;
                String bus9 = bus9StartBusStop + "," + bus9StartTime;
                String bus10 = bus10StartBusStop + "," + bus10StartTime;
                String bus11 = bus11StartBusStop + "," + bus11StartTime;
                
                busesLinkA4.add(bus6);
                busesLinkA4.add(bus7);
                busesLinkA4.add(bus8);
                busesLinkA4.add(bus9);
                busesLinkA4.add(bus10);
                busesLinkA4.add(bus11);
                
                
                /****/
                
                String bus1B = bus1StartBusStopB + "," + bus1StartTimeB;
                String bus2B = bus2StartBusStopB + "," + bus2StartTimeB;
                String bus3B = bus3StartBusStopB + "," + bus3StartTimeB;
                String bus4B = bus4StartBusStopB + "," + bus4StartTimeB;
                
                busesLinkB3.add(bus1B);
                busesLinkB3.add(bus2B);
                busesLinkB3.add(bus3B);
                busesLinkB3.add(bus4B);
                
                String bus6B = bus6StartBusStopB + "," + bus6StartTimeB;
                String bus7B = bus7StartBusStopB + "," + bus7StartTimeB;
                String bus8B = bus8StartBusStopB + "," + bus8StartTimeB;
                
                busesLinkB4.add(bus6B);
                busesLinkB4.add(bus7B);
                busesLinkB4.add(bus8B);
                
                /****/
                
                String bus1C = bus1StartBusStopC + "," + bus1StartTimeC;
                String bus2C = bus2StartBusStopC + "," + bus2StartTimeC;
                String bus3C = bus3StartBusStopC + "," + bus3StartTimeC;
                String bus4C = bus4StartBusStopC + "," + bus4StartTimeC;
                
                busesLinkC3.add(bus1C);
                busesLinkC3.add(bus2C);
                busesLinkC3.add(bus3C);
                busesLinkC3.add(bus4C);
                
                String bus6C = bus6StartBusStopC + "," + bus6StartTimeC;
                String bus7C = bus7StartBusStopC + "," + bus7StartTimeC;
                String bus8C = bus8StartBusStopC + "," + bus8StartTimeC;
                String bus9C = bus9StartBusStopC + "," + bus9StartTimeC;
                
                busesLinkC4.add(bus6C);
                busesLinkC4.add(bus7C);
                busesLinkC4.add(bus8C);
                busesLinkC4.add(bus9C);
 
            
                
            mySimulation.busAgent().setDataForBusesLinkaA3(busesLinkA3);
            mySimulation.busAgent().setDataForBusesLinkaA4(busesLinkA4);

            mySimulation.busAgent().setDataForBusesLinkaB3(busesLinkB3);
            mySimulation.busAgent().setDataForBusesLinkaB4(busesLinkB4);

            mySimulation.busAgent().setDataForBusesLinkaC3(busesLinkC3);
            mySimulation.busAgent().setDataForBusesLinkaC4(busesLinkC4);

            mySimulation.setWaitingMode(jCheckBoxWaitMode.isSelected());

            mySimulation.simulate(10, 9000000d);

    }
    }

    private void analyzeTool2(){
 
        int bus1StartTime = 1200;
        int bus2StartTime = 1800;
        int bus3StartTime = 2400;
        int bus4StartTime = 3000;
        int bus5StartTime = 3600;
        int bus6StartTime = 2400;
        int bus7StartTime = 2400;
        int bus15StartTime = 5400;
        
        String bus1StartBusStop = "00";
        String bus2StartBusStop = "00";
        String bus3StartBusStop = "00";
        String bus4StartBusStop = "00";
        String bus5StartBusStop = "00";
        String bus6StartBusStop = "02";
        String bus7StartBusStop = "10";
        String bus15StartBusStop = "09";
        
        
        int bus8StartTime = 1000;
        int bus9StartTime = 1500;
        int bus10StartTime = 2000;
        int bus11StartTime = 2500;
        int bus12StartTime = 3000;
        int bus13StartTime = 1500;
        int bus14StartTime = 5400;
        
        
        
        String bus8StartBusStop = "00";
        String bus9StartBusStop = "00";
        String bus10StartBusStop = "00";
        String bus11StartBusStop = "00";
        String bus12StartBusStop = "00";
        String bus13StartBusStop = "01";
        String bus14StartBusStop = "09";
        
        ////////////////////////////////////
        
        int bus1StartTimeB = 1200;
        int bus2StartTimeB = 5400;
        int bus3StartTimeB = 2400;
        int bus4StartTimeB = 3000;
        
        String bus1StartBusStopB = "00";
        String bus2StartBusStopB = "09";
        String bus3StartBusStopB = "06";
        String bus4StartBusStopB = "08";
        
        int bus5StartTimeB = 1000;
        int bus6StartTimeB = 1500;
        int bus7StartTimeB = 1500;
        int bus8StartTimeB = 2100;
        
        String bus5StartBusStopB = "00";
        String bus6StartBusStopB = "00";
        String bus7StartBusStopB = "00";
        String bus8StartBusStopB = "05";
                
        ////////////////////////////////////
        
        int bus1StartTimeC = 1200;
        int bus2StartTimeC = 1800;
        int bus3StartTimeC = 2400;
        int bus4StartTimeC = 4200;
        int bus5StartTimeC = 1000;
        
        String bus1StartBusStopC = "00";
        String bus2StartBusStopC = "00";
        String bus3StartBusStopC = "00";
        String bus4StartBusStopC = "04";
        String bus5StartBusStopC = "00";
        
        int bus6StartTimeC = 1000;
        int bus7StartTimeC = 1500;
        int bus8StartTimeC = 2000;
        int bus9StartTimeC = 2500;
        int bus10StartTimeC = 600;
        
        String bus6StartBusStopC = "00";
        String bus7StartBusStopC = "00";
        String bus8StartBusStopC = "00";
        String bus9StartBusStopC = "00";    
        String bus10StartBusStopC = "05";    
        
        mySimulation.setMaxSimSpeed();

            int hourFrom = Integer.parseInt(jTextFieldMatchStart.getText().substring(0, 2));
            int minutesFrom = Integer.parseInt(jTextFieldMatchStart.getText().substring(3, 5));
            int secundesFrom = Integer.parseInt(jTextFieldMatchStart.getText().substring(6, 8));
            double startMatch = (hourFrom * 60 * 60) + (minutesFrom * 60) + secundesFrom;

            mySimulation.setStartMatch(startMatch);
            //mySimulation.registerDelegate(this);

            ArrayList<String> busesLinkA3 = new ArrayList<String>();
            ArrayList<String> busesLinkA4 = new ArrayList<String>();
            
            ArrayList<String> busesLinkB3 = new ArrayList<String>();
            ArrayList<String> busesLinkB4 = new ArrayList<String>();
            
            ArrayList<String> busesLinkC3 = new ArrayList<String>();
            ArrayList<String> busesLinkC4 = new ArrayList<String>();
            
                String bus1 = bus1StartBusStop + "," + bus1StartTime;
                String bus2 = bus2StartBusStop + "," + bus2StartTime;
                String bus3 = bus3StartBusStop + "," + bus3StartTime;
                String bus4 = bus4StartBusStop + "," + bus4StartTime;
                String bus5 = bus5StartBusStop + "," + bus5StartTime;
                String bus6 = bus6StartBusStop + "," + bus6StartTime;
                String bus7 = bus7StartBusStop + "," + bus7StartTime;
                String bus15 = bus15StartBusStop + "," + bus15StartTime;
                
                busesLinkA3.add(bus1);
                busesLinkA3.add(bus2);
                busesLinkA3.add(bus3);
                busesLinkA3.add(bus4);
                busesLinkA3.add(bus5);
                busesLinkA3.add(bus6);
                busesLinkA3.add(bus7);
                busesLinkA3.add(bus15);
                
                
                String bus8 = bus8StartBusStop + "," + bus8StartTime;
                String bus9 = bus9StartBusStop + "," + bus9StartTime;
                String bus10 = bus10StartBusStop + "," + bus10StartTime;
                String bus11 = bus11StartBusStop + "," + bus11StartTime;
                String bus12 = bus12StartBusStop + "," + bus12StartTime;
                String bus13 = bus13StartBusStop + "," + bus13StartTime;
                String bus14 = bus14StartBusStop + "," + bus14StartTime;
                
                busesLinkA4.add(bus8);
                busesLinkA4.add(bus9);
                busesLinkA4.add(bus10);
                busesLinkA4.add(bus11);
                busesLinkA4.add(bus12);
                busesLinkA4.add(bus13);
                busesLinkA4.add(bus14);
                /****/
                
                String bus1B = bus1StartBusStopB + "," + bus1StartTimeB;
                String bus2B = bus2StartBusStopB + "," + bus2StartTimeB;
                String bus3B = bus3StartBusStopB + "," + bus3StartTimeB;
                String bus4B = bus4StartBusStopB + "," + bus4StartTimeB;
                
                busesLinkB3.add(bus1B);
                busesLinkB3.add(bus2B);
                busesLinkB3.add(bus3B);
                busesLinkB3.add(bus4B);
                
                String bus5B = bus5StartBusStopB + "," + bus5StartTimeB;
                String bus6B = bus6StartBusStopB + "," + bus6StartTimeB;
                String bus7B = bus7StartBusStopB + "," + bus7StartTimeB;
                String bus8B = bus8StartBusStopB + "," + bus8StartTimeB;
                
                busesLinkB4.add(bus5B);
                busesLinkB4.add(bus6B);
                //busesLinkB4.add(bus7B);
                //busesLinkB4.add(bus8B);
                
                /****/
                
                String bus1C = bus1StartBusStopC + "," + bus1StartTimeC;
                String bus2C = bus2StartBusStopC + "," + bus2StartTimeC;
                String bus3C = bus3StartBusStopC + "," + bus3StartTimeC;
                String bus4C = bus4StartBusStopC + "," + bus4StartTimeC;
                String bus5C = bus5StartBusStopC + "," + bus5StartTimeC;
                
                busesLinkC3.add(bus1C);
                busesLinkC3.add(bus2C);
                busesLinkC3.add(bus3C);
                busesLinkC3.add(bus4C);
                //busesLinkC3.add(bus5C);
                
                String bus6C = bus6StartBusStopC + "," + bus6StartTimeC;
                String bus7C = bus7StartBusStopC + "," + bus7StartTimeC;
                String bus8C = bus8StartBusStopC + "," + bus8StartTimeC;
                String bus9C = bus9StartBusStopC + "," + bus9StartTimeC;
                String bus10C = bus10StartBusStopC + "," + bus10StartTimeC;
                
                busesLinkC4.add(bus6C);
                busesLinkC4.add(bus7C);
                busesLinkC4.add(bus8C);
                busesLinkC4.add(bus9C);
                busesLinkC4.add(bus10C);
    
    
    
    
////////////////////////////////////////////////////////////////////////////////////
         for(int j = 0; j < 14; j++) {
              for(int k = 1; k < 24; k++) {
                  String bus;
                  if(j < 10){
                    bus = "0" + j + "," + k*300;
                  } else {
                    bus = j + "," + k*300;
                  }
                    busesLinkA4.add(bus);
            
                    mySimulation.busAgent().setDataForBusesLinkaA3(busesLinkA3);
                    mySimulation.busAgent().setDataForBusesLinkaA4(busesLinkA4);

                    mySimulation.busAgent().setDataForBusesLinkaB3(busesLinkB3);
                    mySimulation.busAgent().setDataForBusesLinkaB4(busesLinkB4);

                    mySimulation.busAgent().setDataForBusesLinkaC3(busesLinkC3);
                    mySimulation.busAgent().setDataForBusesLinkaC4(busesLinkC4);
                    
                    mySimulation.setWaitingMode(true);
                    mySimulation.simulate(10, 9000000d);
                    
                    busesLinkA4.remove(busesLinkA4.size() - 1);
              }
          }   
     
    
    } 
     public void analyzerToolMicrobuses() {
        int bus1StartTime = 1200;
        int bus2StartTime = 1800;
        int bus3StartTime = 2400;
        int bus4StartTime = 3000;
        int bus5StartTime = 3600;
        
        String bus1StartBusStop = "00";
        String bus2StartBusStop = "00";
        String bus3StartBusStop = "00";
        String bus4StartBusStop = "00";
        String bus5StartBusStop = "00";        
        
        int bus6StartTime = 1000;
        int bus7StartTime = 1500;
        int bus8StartTime = 2000;
        int bus9StartTime = 2500;
        int bus10StartTime = 3000;
        int bus11StartTime = 300;   
        int bus12StartTime = 600;  
        
        String bus6StartBusStop = "00";
        String bus7StartBusStop = "00";
        String bus8StartBusStop = "00";
        String bus9StartBusStop = "00";
        String bus10StartBusStop = "00";
        String bus11StartBusStop = "00";
        String bus12StartBusStop = "01";

        
        ////////////////////////////////////
        
        int bus1StartTimeB = 1200;
        int bus2StartTimeB = 3000;
        
        String bus1StartBusStopB = "00";
        String bus2StartBusStopB = "06";
        
        int bus3StartTimeB = 1000;
        int bus4StartTimeB = 1500;
        
        String bus3StartBusStopB = "00";
        String bus4StartBusStopB = "00";
                
        ////////////////////////////////////
        
        int bus1StartTimeC = 1200;
        int bus2StartTimeC = 1800;
        int bus3StartTimeC = 2400;
        
        String bus1StartBusStopC = "00";
        String bus2StartBusStopC = "00";
        String bus3StartBusStopC = "00";

        int bus4StartTimeC = 1000;
        int bus5StartTimeC = 1500;
        int bus6StartTimeC = 2000;
        int bus7StartTimeC = 2500;
        int bus8StartTimeC = 300;
        int bus9StartTimeC = 300;
        
        String bus4StartBusStopC = "00";
        String bus5StartBusStopC = "00";
        String bus6StartBusStopC = "00";
        String bus7StartBusStopC = "00";    
        String bus8StartBusStopC = "00";   
        String bus9StartBusStopC = "06"; 
         
            ArrayList<String> busesLinkA3 = new ArrayList<String>();
            ArrayList<String> busesLinkA4 = new ArrayList<String>();
            ArrayList<String> busesLinkAMic = new ArrayList<String>();
            
            ArrayList<String> busesLinkB3 = new ArrayList<String>();
            ArrayList<String> busesLinkB4 = new ArrayList<String>();
            ArrayList<String> busesLinkBMic = new ArrayList<String>();
            
            ArrayList<String> busesLinkC3 = new ArrayList<String>();
            ArrayList<String> busesLinkC4 = new ArrayList<String>();
            ArrayList<String> busesLinkCMic = new ArrayList<String>();
            
                String bus1 = bus1StartBusStop + "," + bus1StartTime;
                String bus2 = bus2StartBusStop + "," + bus2StartTime;
                String bus3 = bus3StartBusStop + "," + bus3StartTime;
                String bus4 = bus4StartBusStop + "," + bus4StartTime;
                String bus5 = bus5StartBusStop + "," + bus5StartTime;

                
                busesLinkA3.add(bus1);
                busesLinkA3.add(bus2);
                busesLinkA3.add(bus3);
                busesLinkA3.add(bus4);
                busesLinkA3.add(bus5);
                
                String bus6 = bus6StartBusStop + "," + bus6StartTime;
                String bus7 = bus7StartBusStop + "," + bus7StartTime;
                String bus8 = bus8StartBusStop + "," + bus8StartTime;
                String bus9 = bus9StartBusStop + "," + bus9StartTime;
                String bus10 = bus10StartBusStop + "," + bus10StartTime;
                String bus11 = bus11StartBusStop + "," + bus11StartTime;
                String bus12 = bus12StartBusStop + "," + bus12StartTime;
                
                busesLinkA4.add(bus6);
                busesLinkA4.add(bus7);
                busesLinkA4.add(bus8);
                busesLinkA4.add(bus9);
                busesLinkA4.add(bus10);
                busesLinkA4.add(bus11);
                busesLinkA4.add(bus12);
                /****/
                
                String bus1B = bus1StartBusStopB + "," + bus1StartTimeB;
                String bus2B = bus2StartBusStopB + "," + bus2StartTimeB;
                
                busesLinkB3.add(bus1B);
                busesLinkB3.add(bus2B);
                
                String bus3B = bus3StartBusStopB + "," + bus3StartTimeB;
                String bus4B = bus4StartBusStopB + "," + bus4StartTimeB;
                
                busesLinkB4.add(bus3B);
                busesLinkB4.add(bus4B);

                
                /****/
                
                String bus1C = bus1StartBusStopC + "," + bus1StartTimeC;
                String bus2C = bus2StartBusStopC + "," + bus2StartTimeC;
                String bus3C = bus3StartBusStopC + "," + bus3StartTimeC;
                
                
                busesLinkC3.add(bus1C);
                busesLinkC3.add(bus2C);
                busesLinkC3.add(bus3C);
                
                
                String bus4C = bus4StartBusStopC + "," + bus4StartTimeC;
                String bus5C = bus5StartBusStopC + "," + bus5StartTimeC;
                String bus6C = bus6StartBusStopC + "," + bus6StartTimeC;
                String bus7C = bus7StartBusStopC + "," + bus7StartTimeC;
                String bus8C = bus8StartBusStopC + "," + bus8StartTimeC;
                String bus9C = bus9StartBusStopC + "," + bus9StartTimeC;
                
                busesLinkC3.add(bus4C);
                busesLinkC3.add(bus5C);
                busesLinkC4.add(bus6C);
                busesLinkC4.add(bus7C);
                busesLinkC4.add(bus8C);
                busesLinkC4.add(bus9C);
            
         mySimulation.setMaxSimSpeed();

            int hourFrom = Integer.parseInt(jTextFieldMatchStart.getText().substring(0, 2));
            int minutesFrom = Integer.parseInt(jTextFieldMatchStart.getText().substring(3, 5));
            int secundesFrom = Integer.parseInt(jTextFieldMatchStart.getText().substring(6, 8));
            double startMatch = (hourFrom * 60 * 60) + (minutesFrom * 60) + secundesFrom;
            
         mySimulation.setStartMatch(startMatch);
            //mySimulation.registerDelegate(this);
        
            int numberOfMicrobusesLinkA = 7;
            int numberOfMicrobusesLinkB = 5;
            int numberOfMicrobusesLinkC = 1;
            
            Random randomA = new Random();
            Random randomB= new Random();
            Random randomC = new Random();
            
            
              for(int k = 1; k < 2; k++) {
                  /*numberOfMicrobusesLinkA = randomA.nextInt((13 - 1) + 1) + 1;
                  if(numberOfMicrobusesLinkA < 13){
                    int maxB = 13 - numberOfMicrobusesLinkA;
                    numberOfMicrobusesLinkB = randomB.nextInt((maxB - 1) + 1) + 1;
                    if((numberOfMicrobusesLinkB + numberOfMicrobusesLinkA) < 13) {
                        int maxC = 13 - numberOfMicrobusesLinkA - numberOfMicrobusesLinkB;
                        numberOfMicrobusesLinkC = randomC.nextInt((maxC - 1) + 1) + 1;
                    }
                  }
                  */
                  for(int j = 0; j < numberOfMicrobusesLinkA; j++){                    
                      String bus = "00,0";
                      busesLinkAMic.add(bus);
                  }
                  for(int j = 0; j < numberOfMicrobusesLinkB; j++){                    
                      String bus = "00,0";
                      busesLinkBMic.add(bus);
                  }
                  for(int j = 0; j < numberOfMicrobusesLinkC; j++){                    
                      String bus = "00,0";
                      busesLinkCMic.add(bus);
                  }
                  
            
                    mySimulation.busAgent().setDataForBusesLinkaA3(busesLinkA3);
                    mySimulation.busAgent().setDataForBusesLinkaA4(busesLinkA4);
                    mySimulation.busAgent().setDataForBusesLinkaA1(busesLinkAMic);

                    mySimulation.busAgent().setDataForBusesLinkaB3(busesLinkB3);
                    mySimulation.busAgent().setDataForBusesLinkaB4(busesLinkB4);
                    mySimulation.busAgent().setDataForBusesLinkaB1(busesLinkBMic);
                    
                    mySimulation.busAgent().setDataForBusesLinkaC3(busesLinkC3);
                    mySimulation.busAgent().setDataForBusesLinkaC4(busesLinkC4);
                    mySimulation.busAgent().setDataForBusesLinkaC1(busesLinkCMic);
                    
                    mySimulation.setWaitingMode(false);
                    mySimulation.simulate(10000, 9000000d);
                    
                    numberOfMicrobusesLinkA = 0;
                    numberOfMicrobusesLinkB = 0;
                    numberOfMicrobusesLinkC = 0;
                    
                    busesLinkAMic = new ArrayList<String>();
                    busesLinkBMic = new ArrayList<String>();
                    busesLinkCMic = new ArrayList<String>();

               }
            
     }
}


